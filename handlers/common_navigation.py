from aiogram import Router, F
from aiogram.types import CallbackQuery
from keyboards.admin import get_admin_menu_keyboard
from keyboards.main_menu import get_main_menu_keyboard

router = Router()


@router.callback_query(F.data.startswith("back:"))
async def handle_back_callback(call: CallbackQuery, state: FSMContext):
    target = call.data.split("back:")[1]
    await call.answer()

    if target == "main":
        await call.message.answer("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=get_main_menu_keyboard(call.from_user.id))

    elif target == "shop":
        from keyboards.shop import get_shop_keyboard
        await call.message.answer("üõí –ú–∞–≥–∞–∑–∏–Ω", reply_markup=get_shop_keyboard())

    elif target == "program":
        await call.message.answer("–í—ã–±–µ—Ä–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É –∑–∞–Ω–æ–≤–æ:")
        await state.set_state(ProgramSelection.program)

    elif target == "module":
        await call.message.answer("–í—ã–±–µ—Ä–∏ –º–æ–¥—É–ª—å –∑–∞–Ω–æ–≤–æ:")
        await state.set_state(ProgramSelection.module)

    elif target == "discipline":
        await call.message.answer("–í—ã–±–µ—Ä–∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É –∑–∞–Ω–æ–≤–æ:")
        await state.set_state(ProgramSelection.discipline)

    elif target == "level":
        await call.message.answer("–í—ã–±–µ—Ä–∏ —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:")
        await state.set_state(ProgramSelection.level)

    elif target == "admin":
        await call.message.answer("üõ† –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", reply_markup=get_admin_menu_keyboard())

    else:
        await call.message.answer("‚õî –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—É–Ω–∫—Ç –≤–æ–∑–≤—Ä–∞—Ç–∞.")
