from aiogram import Router, F
from aiogram.types import Message
from services.user_service import (
    get_user_row_by_id, 
    update_user_after_answer, 
    decrease_question_limit
)
from services.gpt_service import generate_answer
import io
from services.vision_service import extract_text_from_image
from services.google_sheets_service import log_photo_request


router = Router()

@router.message(F.photo)
async def handle_photo_with_test(message: Message):
    user_id = message.from_user.id
    row = await get_user_row_by_id(user_id)
    if not row:
        await message.answer("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
        return

    plan = row.get("plan", "").lower()
    status = row.get("status", "")
    status_clean = status.split()[-1]

    if plan != "pro" and status_clean not in ["–≠–∫—Å–ø–µ—Ä—Ç", "–ù–∞—Å—Ç–∞–≤–Ω–∏–∫", "–õ–µ–≥–µ–Ω–¥–∞", "–°–æ–∑–¥–∞—Ç–µ–ª—å"]:
        await message.answer("üõë –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º –≠–∫—Å–ø–µ—Ä—Ç+ –∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫–æ–π –ü—Ä–æ.")
        return

    # 1Ô∏è‚É£ –°–ø–∏—Å—ã–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å
    success = await decrease_question_limit(user_id)
    if not success:
        await message.answer("‚ùå –£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å—ã. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –ª–∏–º–∏—Ç –≤ —Ä–∞–∑–¥–µ–ª–µ üõí –ú–∞–≥–∞–∑–∏–Ω.")
        return

    await message.answer("üì∏ –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ. –†–∞—Å–ø–æ–∑–Ω–∞—é —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ Google Vision...")

    photo = message.photo[-1]
    photo_bytes = await photo.download(destination=io.BytesIO())
    photo_bytes.seek(0)
    image_data = photo_bytes.read()

    text = extract_text_from_image(image_data)

    if not text.strip():
        await message.answer("‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–µ–∫—Å—Ç. –ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –Ω–∞ —Ñ–æ—Ç–æ –µ—Å—Ç—å —á—ë—Ç–∫–∏–π —Ç–µ–∫—Å—Ç.")
        return

    await message.answer(f"üìÑ –†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:\n<pre>{text}</pre>", parse_mode="HTML")

    try:
        answer = await generate_answer("–û–±—â–∏–π –∞–Ω–∞–ª–∏–∑", "–¢–µ—Å—Ç", "–§–æ—Ç–æ–∑–∞–ø—Ä–æ—Å", text)
        await message.answer(f"ü§ñ –û—Ç–≤–µ—Ç –ò–ò:\n\n{answer}")

        # 2Ô∏è‚É£ –û–±–Ω–æ–≤–ª—è–µ–º XP, —Å—Ç–∞—Ç—É—Å –∏ –º–∏—Å—Å–∏–∏
        await update_user_after_answer(user_id, bot=message.bot)

        # 3Ô∏è‚É£ –õ–æ–≥–∏—Ä—É–µ–º
        await log_photo_request(user_id, text, answer)

    except Exception as e:
        print(f"[GPT ERROR] {e}")
        await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
