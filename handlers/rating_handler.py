from aiogram import Router, F
from aiogram.types import CallbackQuery
from services.user_service import get_user_row_by_id
from services.google_sheets_service import log_user_rating
from keyboards.common import get_consultant_keyboard

router = Router()


@router.callback_query(F.data.startswith("rating:"))
async def handle_rating(callback: CallbackQuery, state):
    rating = callback.data.split(":")[1]
    user = callback.from_user

    print(f"[DEBUG] –û—Ü–µ–Ω–∫–∞ –Ω–∞–∂–∞—Ç–∞: {rating} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.id} ({user.full_name})")

    row = await get_user_row_by_id(user.id)
    if row:
        xp = int(row.get("xp", 0))
        status = row.get("status", "–ù–æ–≤–∏—á–æ–∫")
        plan = row.get("plan", "").strip().lower()
        status_clean = status.split()[-1] if status else "–ù–æ–≤–∏—á–æ–∫"

        print(f"[DEBUG] –°—Ç–∞—Ç—É—Å: {status} | XP: {xp} | Plan: {plan}")

        try:
            await log_user_rating(user.id, rating, status, xp)
            print(f"[LOG] –£—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω–æ –≤ Feedback: {user.id}, {rating}")
        except Exception as e:
            print(f"[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Ü–µ–Ω–∫–∏: {e}")

        await callback.message.answer(
            "üì© –°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–≤–æ—é –æ—Ü–µ–Ω–∫—É!",
            reply_markup=get_consultant_keyboard(status_clean, plan)
        )

    else:
        print(f"[WARNING] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ.")

    await callback.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É!", show_alert=False)
