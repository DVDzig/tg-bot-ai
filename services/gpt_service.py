from openai import AsyncOpenAI
from openai.types.chat import ChatCompletion
import openai  # –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫

from config import OPENAI_API_KEY, VIDEO_URLS, YOUTUBE_API_KEY
from services.google_sheets_service import get_keywords_for_discipline
from googleapiclient.discovery import build

client = AsyncOpenAI()

async def generate_answer(program: str, module: str, discipline: str, user_question: str) -> str:
    try:
        chat: ChatCompletion = await client.chat.completions.create(
            model="gpt-4",
            messages=[
                {"role": "system", "content": f"–¢—ã –ò–ò-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç. –û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –ø–æ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–µ: {discipline} –º–æ–¥—É–ª—è {module} –ø—Ä–æ–≥—Ä–∞–º–º—ã {program}."},
                {"role": "user", "content": user_question}
            ],
            temperature=0.7,
            max_tokens=1000,
        )
        return chat.choices[0].message.content.strip()

    except openai.RateLimitError:
        return "‚ö†Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –æ–±—Ä–∞—â–µ–Ω–∏–π –∫ –ò–ò. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ."
    except openai.AuthenticationError:
        return "üö´ –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å OpenAI API –∫–ª—é—á."
    except openai.APIConnectionError:
        return "üîå –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ OpenAI. –ü–æ–≤—Ç–æ—Ä–∏ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ."
    except openai.APIError as e:
        return f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ OpenAI: {e}"
    except Exception as e:
        return f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò: {e}"

async def get_video_urls_by_discipline(program, module, discipline, num_videos):
    videos = VIDEO_URLS.get(program, {}).get(module, {}).get(discipline, [])
    return videos[:num_videos]

# –ù–∞—Å—Ç—Ä–æ–∏–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ YouTube API
youtube = build("youtube", "v3", developerKey=YOUTUBE_API_KEY)

async def search_video_on_youtube(query: str, max_results: int = 3):
    request = youtube.search().list(
        q=query,
        part="snippet",
        maxResults=max_results,
        type="video"
    )
    response = request.execute()
    video_urls = [
        f"https://www.youtube.com/watch?v={item['id']['videoId']}"
        for item in response["items"]
    ]
    return video_urls
